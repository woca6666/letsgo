#spring:
#    main:
#        allow-bean-definition-overriding: true
#    datasource:
#        type: com.alibaba.druid.pool.DruidDataSource
#        druid:
#            driver-class-name: org.postgresql.Driver
#            url: jdbc:postgresql://140.249.194.235:22581/zz_life?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=CTT&useSSL=false
#            username: zz_life
#            password: zz@0324_life
#            initial-size: 1
#            max-active: 128
#            min-idle: 96
#            filter:
#                stat:
#                    log-slow-sql: true
#                    db-type: postgresql
#                    enabled: true
spring:
    main:
        allow-bean-definition-overriding: true
    # 配置真实数据源
    shardingsphere:
        datasource:
            names: ds0
            # 配置第1个数据源
            ds0:
                # 数据库连接池类名称
                type: com.alibaba.druid.pool.DruidDataSource
                # 数据库驱动类名
                driver-class-name: org.postgresql.Driver
                # 数据库url连接
                url: jdbc:postgresql://140.249.194.235:22581/zz_life?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&serverTimezone=CTT&useSSL=false
                #数据库用户名
                username: zz_life
                # 数据库密码
                password: zz@0324_life
#                maxPoolSize: 100
#                minPoolSize: 10
                initial-size: 20
                max-active: 200
                max-wait: 25000
                min-evictable-idle-time-millis: 1814400
                min-idle: 20
                test-on-borrow: true
                test-on-return: true
                test-while-idle: true
#                validation-query: SELECT 1
                validation-query-timeout: 2000
                time-between-eviction-runs-millis: 1814400
                time-between-connect-error-millis: 60000
                pool-prepared-statements: true
                max-pool-prepared-statement-per-connection-size: 20
        # 配置 user 表规则
        sharding:
            default-data-source-name: ds0
            tables:
                sub_order:
                    # 主键策略 雪花算法
#                    key-generator:
#                        column: id
#                        type: SNOWFLAKE
                    actual-data-nodes: ds0.sub_order_$->{2021..2022}${(1..12).collect{t->t.toString().padLeft(2,'0')}}
                    # 配置分表策略 主键取模 0在0表 1在1表
                    table-strategy:
                        standard:
                            #分片列名称
                            sharding-column: create_time
                            #精确分片算法类名称
                            preciseAlgorithmClassName: com.myzone.demoshardingjdbc.utils.CreateTimeShardingAlgorithm
        # 打开sql控制台输出日志
        props:
            sql:
                show: true